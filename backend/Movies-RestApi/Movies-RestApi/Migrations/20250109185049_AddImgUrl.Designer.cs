// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies_RestApi.Data;

#nullable disable

namespace Movies_RestApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250109185049_AddImgUrl")]
    partial class AddImgUrl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieActor", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActor");
                });

            modelBuilder.Entity("Movies_RestApi.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Leonardo",
                            LastName = "DiCaprio"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Brad",
                            LastName = "Pitt"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Scarlett",
                            LastName = "Johansson"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Tom",
                            LastName = "Hanks"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Natalie",
                            LastName = "Portman"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Johnny",
                            LastName = "Depp"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Morgan",
                            LastName = "Freeman"
                        });
                });

            modelBuilder.Entity("Movies_RestApi.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Steven",
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Christopher",
                            LastName = "Nolan"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Quentin",
                            LastName = "Tarantino"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Martin",
                            LastName = "Scorsese"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "James",
                            LastName = "Cameron"
                        });
                });

            modelBuilder.Entity("Movies_RestApi.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Adventure"
                        });
                });

            modelBuilder.Entity("Movies_RestApi.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionDetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("GenreId");

                    b.HasIndex("ProductionDetailsId")
                        .IsUnique();

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DirectorId = 2,
                            GenreId = 5,
                            ImageUrl = "https://m.media-amazon.com/images/I/61AYEacqlkL._AC_SL1000_.jpg",
                            ProductionDetailsId = 1,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            DirectorId = 3,
                            GenreId = 2,
                            ImageUrl = "https://m.media-amazon.com/images/I/51DZpY7tfoL.__AC_SX300_SY300_QL70_ML2_.jpg",
                            ProductionDetailsId = 2,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 3,
                            DirectorId = 1,
                            GenreId = 1,
                            ImageUrl = "https://fwcdn.pl/fpo/12/12/1212/8067050_1.10.webp",
                            ProductionDetailsId = 3,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Jurassic Park"
                        },
                        new
                        {
                            Id = 4,
                            DirectorId = 4,
                            GenreId = 2,
                            ImageUrl = "https://m.media-amazon.com/images/M/MV5BYTgwNmQzZDctMjNmOS00OTExLTkwM2UtNzJmOTJhODFjOTdlXkEyXkFqcGc@._V1_FMjpg_UX1000_.jpg",
                            ProductionDetailsId = 4,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Revenant"
                        },
                        new
                        {
                            Id = 5,
                            DirectorId = 5,
                            GenreId = 2,
                            ImageUrl = "https://m.media-amazon.com/images/M/MV5BYzYyN2FiZmUtYWYzMy00MzViLWJkZTMtOGY1ZjgzNWMwN2YxXkEyXkFqcGc@._V1_.jpg",
                            ProductionDetailsId = 5,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Titanic"
                        },
                        new
                        {
                            Id = 6,
                            DirectorId = 2,
                            GenreId = 1,
                            ImageUrl = "https://m.media-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_FMjpg_UX1000_.jpg",
                            ProductionDetailsId = 6,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Dark Knight"
                        },
                        new
                        {
                            Id = 7,
                            DirectorId = 5,
                            GenreId = 6,
                            ImageUrl = "https://fwcdn.pl/fpo/81/78/558178/8047434_1.8.webp",
                            ProductionDetailsId = 7,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Avatar"
                        },
                        new
                        {
                            Id = 8,
                            DirectorId = 2,
                            GenreId = 5,
                            ImageUrl = "https://fwcdn.pl/fpo/56/29/375629/7670122_2.8.webp",
                            ProductionDetailsId = 8,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = 9,
                            DirectorId = 4,
                            GenreId = 2,
                            ImageUrl = "https://m.media-amazon.com/images/M/MV5BYTJkNGQyZDgtZDQ0NC00MDM0LWEzZWQtYzUzZDEwMDljZWNjXkEyXkFqcGc@._V1_FMjpg_UX1000_.jpg",
                            ProductionDetailsId = 9,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Godfather"
                        },
                        new
                        {
                            Id = 10,
                            DirectorId = 1,
                            GenreId = 5,
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRfSjSWOCaw5dnDL2GT1zFd9RMCgUGw5Q2Cfg&s",
                            ProductionDetailsId = 10,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = 11,
                            DirectorId = 3,
                            GenreId = 7,
                            ImageUrl = "https://m.media-amazon.com/images/I/51GA6V6VE1L._AC_UF894,1000_QL80_.jpg",
                            ProductionDetailsId = 11,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Gladiator"
                        },
                        new
                        {
                            Id = 12,
                            DirectorId = 4,
                            GenreId = 2,
                            ImageUrl = "https://fwcdn.pl/fpo/65/97/426597/7586610_1.8.webp",
                            ProductionDetailsId = 12,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Wolf of Wall Street"
                        },
                        new
                        {
                            Id = 13,
                            DirectorId = 1,
                            GenreId = 7,
                            ImageUrl = "https://fwcdn.pl/fpo/73/09/37309/7515192_1.3.jpg",
                            ProductionDetailsId = 13,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pirates of the Caribbean"
                        },
                        new
                        {
                            Id = 14,
                            DirectorId = 2,
                            GenreId = 1,
                            ImageUrl = "https://fwcdn.pl/fpo/15/15/371515/7611932_1.3.jpg",
                            ProductionDetailsId = 14,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Avengers"
                        },
                        new
                        {
                            Id = 15,
                            DirectorId = 3,
                            GenreId = 2,
                            ImageUrl = "https://m.media-amazon.com/images/M/MV5BOTgyOGQ1NDItNGU3Ny00MjU3LTg2YWEtNmEyYjBiMjI1Y2M5XkEyXkFqcGc@._V1_FMjpg_UX1000_.jpg",
                            ProductionDetailsId = 15,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Fight Club"
                        });
                });

            modelBuilder.Entity("Movies_RestApi.Entities.ProductionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Studio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductionDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 160000000m,
                            Duration = 0,
                            Studio = "Warner Bros"
                        },
                        new
                        {
                            Id = 2,
                            Budget = 8000000m,
                            Duration = 0,
                            Studio = "Miramax"
                        },
                        new
                        {
                            Id = 3,
                            Budget = 63000000m,
                            Duration = 0,
                            Studio = "Universal Pictures"
                        },
                        new
                        {
                            Id = 4,
                            Budget = 135000000m,
                            Duration = 0,
                            Studio = "20th Century Fox"
                        },
                        new
                        {
                            Id = 5,
                            Budget = 200000000m,
                            Duration = 0,
                            Studio = "Paramount Pictures"
                        },
                        new
                        {
                            Id = 6,
                            Budget = 185000000m,
                            Duration = 0,
                            Studio = "Warner Bros"
                        },
                        new
                        {
                            Id = 7,
                            Budget = 237000000m,
                            Duration = 0,
                            Studio = "Lightstorm Entertainment"
                        },
                        new
                        {
                            Id = 8,
                            Budget = 165000000m,
                            Duration = 0,
                            Studio = "Paramount Pictures"
                        },
                        new
                        {
                            Id = 9,
                            Budget = 6000000m,
                            Duration = 0,
                            Studio = "Paramount Pictures"
                        },
                        new
                        {
                            Id = 10,
                            Budget = 63000000m,
                            Duration = 0,
                            Studio = "Warner Bros"
                        },
                        new
                        {
                            Id = 11,
                            Budget = 103000000m,
                            Duration = 0,
                            Studio = "DreamWorks"
                        },
                        new
                        {
                            Id = 12,
                            Budget = 100000000m,
                            Duration = 0,
                            Studio = "Paramount Pictures"
                        },
                        new
                        {
                            Id = 13,
                            Budget = 140000000m,
                            Duration = 0,
                            Studio = "Walt Disney Pictures"
                        },
                        new
                        {
                            Id = 14,
                            Budget = 220000000m,
                            Duration = 0,
                            Studio = "Marvel Studios"
                        },
                        new
                        {
                            Id = 15,
                            Budget = 63000000m,
                            Duration = 0,
                            Studio = "20th Century Fox"
                        });
                });

            modelBuilder.Entity("Movies_RestApi.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "John",
                            Comment = "Amazing movie!",
                            MovieId = 1,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Alice",
                            Comment = "A true classic!",
                            MovieId = 2,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AuthorName = "Robert",
                            Comment = "Very exciting!",
                            MovieId = 3,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AuthorName = "Emily",
                            Comment = "Great acting!",
                            MovieId = 4,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AuthorName = "Mark",
                            Comment = "Loved the story.",
                            MovieId = 5,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AuthorName = "Sophia",
                            Comment = "Fantastic visuals!",
                            MovieId = 6,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AuthorName = "David",
                            Comment = "A must-watch!",
                            MovieId = 7,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AuthorName = "Chris",
                            Comment = "Very emotional!",
                            MovieId = 8,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AuthorName = "Sarah",
                            Comment = "An all-time favorite!",
                            MovieId = 9,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            AuthorName = "Anna",
                            Comment = "Mind-blowing!",
                            MovieId = 10,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            AuthorName = "Tom",
                            Comment = "Epic battles!",
                            MovieId = 11,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            AuthorName = "Paul",
                            Comment = "Very entertaining!",
                            MovieId = 12,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            AuthorName = "Laura",
                            Comment = "A fun adventure!",
                            MovieId = 13,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            AuthorName = "Diana",
                            Comment = "Superheroes at their best!",
                            MovieId = 14,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            AuthorName = "Steve",
                            Comment = "A masterpiece!",
                            MovieId = 15,
                            Rating = 0,
                            ReviewDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MovieActor", b =>
                {
                    b.HasOne("Movies_RestApi.Entities.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies_RestApi.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Movies_RestApi.Entities.Movie", b =>
                {
                    b.HasOne("Movies_RestApi.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies_RestApi.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies_RestApi.Entities.ProductionDetails", "ProductionDetails")
                        .WithOne()
                        .HasForeignKey("Movies_RestApi.Entities.Movie", "ProductionDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("ProductionDetails");
                });

            modelBuilder.Entity("Movies_RestApi.Entities.Review", b =>
                {
                    b.HasOne("Movies_RestApi.Entities.Movie", "Movie")
                        .WithMany("Reviews")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Movies_RestApi.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Movies_RestApi.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Movies_RestApi.Entities.Movie", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
